#!/bin/bash
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

version=@version@

shopt -s nullglob

LIBDIR='@libdir@'
DATADIR='@datadir@'
SYSCONFDIR='@sysconfdir@'

[[ -r ${LIBDIR}/util-msg.sh ]] && source ${LIBDIR}/util-msg.sh
import ${LIBDIR}/util.sh
import ${LIBDIR}/util-chroot.sh
import ${LIBDIR}/util-pkg.sh
import ${LIBDIR}/util-pkg-chroot.sh

show_pkg(){
    check_build "$1"
    cd $1
        source PKGBUILD
        for n in ${pkgname[@]}; do
            msg2 "%s" "$n"
        done
    cd ..
}

display_settings(){
    show_version
    show_config

    msg "OPTIONS:"
    msg2 "arch: %s" "${target_arch}"
    msg2 "chroots_pkg: %s" "${chroots_pkg}"
    msg2 "repository: %s" "${repository}"
    msg2 "stablility: %s" "${stablility}"

    msg "ARGS:"
    msg2 "create_first: %s" "${create_first}"
    msg2 "makepkg_args: %s" "${makepkg_args[*]}"
    msg2 "mkchrootpkg_args: %s" "${mkchrootpkg_args[*]}"

    msg "BUILD:"
    show_pkg "${package}"
}

load_user_info

load_config "${AT_USERCONFDIR}/artools.conf" || load_config "${SYSCONFDIR}/artools.conf"

create_first=false
pretend=false

mkchroot_args=()
mkchrootpkg_args=(-c -n)

install_pkgs=()

package=''
cmd=${0##*/}
stablility=${cmd##*-}
repository=${PWD##*/}
base_devel=('base-devel')

prepare_build(){
    local pac_arch='default' pac_conf=

    if [[ "${target_arch}" == 'multilib' ]];then
        pac_arch='multilib'
        base_devel+=('multilib-devel')
    fi

    if [[ ${stablility} == 'buildpkg' ]];then
        pac_conf=$pac_arch
    else
        pac_conf=$pac_arch-${stablility}
    fi

    local pacman_conf="${DATADIR}/pacman-$pac_conf.conf"
    [[ -f $AT_USERCONFDIR/pacman-$pac_conf.conf ]] && pacman_conf="$AT_USERCONFDIR/pacman-$pac_conf.conf"
    work_dir="${chroots_pkg}/${repository}-${target_arch}"

    [[ "$pac_arch" == 'multilib' ]] && target_arch='x86_64'

    local makepkg_conf="${DATADIR}/makepkg-${target_arch}.conf"
    [[ -f $AT_USERCONFDIR/makepkg-${target_arch}.conf ]] && makepkg_conf="$AT_USERCONFDIR/makepkg-${target_arch}.conf"

    mkchroot_args+=(-C "${pacman_conf}" -M "${makepkg_conf}" "${work_dir}/root")

    mkchrootpkg_args+=(-r "${work_dir}" "${makepkg_args[@]}")

    timer_start=$(get_timer)
}

usage() {
    echo "Usage: ${0##*/} [options] -- [makepkg_args]"
    echo "    -p <pkg>           Package to build [default: ${package}]"
    echo "    -a <arch>          Arch [default: ${target_arch}]"
    echo "    -r <dir>           Chroots directory [default: ${chroots_pkg}]"
    echo '    -z <repo>          Repo name'
    echo '    -c                 Create root chroot'
    echo '    -q                 Query settings and pretend build'
    echo '    -h                 This help'
    echo ''
    echo "Default makepkg_args args: ${makepkg_args[*]}"
    echo ''
    exit $1
}

orig_argv=("$0" "$@")

opts='p:a:r:z:cqh'

while getopts "${opts}" arg; do
    case "${arg}" in
        p) package="$OPTARG" ;;
        a) target_arch="$OPTARG" ;;
        r) chroots_pkg="$OPTARG" ;;
        z) repository="$OPTARG" ;;
        c) create_first=true ;;
        q) pretend=true ;;
        h|?) usage 0 ;;
        *) echo "invalid argument '%s'" "${arg}"; usage 1 ;;
    esac
done

# shift $(($OPTIND - 1))
makepkg_args+=("${@:$OPTIND}")

check_root

prepare_build

${pretend} && display_settings && exit

if ${create_first} || [[ ! -d ${work_dir}/root ]];then
    msg "Creating chroot for [%s] (%s)..." "${repository}" "${target_arch}"

    for copy in "${work_dir}"/*; do
        [[ -d $copy ]] || continue
        msg2 "Deleting chroot copy '%s'..." "$(basename "${copy}")"

        lock 9 "$copy.lock" "Locking chroot copy '%s'" "$copy"

        subvolume_delete_recursive "${copy}"
        rm -rf --one-file-system "${copy}"
    done
    lock_close 9

    rm -rf --one-file-system "${work_dir}"
    mkdir -p "${work_dir}"
    setarch "${target_arch}" mkchroot \
        "${mkchroot_args[@]}"  "${base_devel[@]}" || abort
else
    lock 9 "${work_dir}/root.lock" "Locking clean chroot"
    chroot-run "${mkchroot_args[@]}" \
        pacman -Syu --noconfirm || abort
fi

build "${package}"
